*       *********************************************************
*       *                                                         
*       * 06/09/2002         EDITSHORTCUT.MPR           15:21:32  
*       *                                                         
*       *********************************************************
*       *                                                         
*       * Author's Name                                           
*       *                                                         
*       * Copyright (C) 2002 Company Name                         
*       * Address                                                 
*       * City,     Zip                                           
*       *                                                         
*       * Description:                                            
*       * This PROGRAM was automatically generated BY GENMENU.    
*       *                                                         
*       *********************************************************


*       *********************************************************
*       *                                                         
*       *                        Setup Code                       
*       *                                                         
*       *********************************************************
*

LPARAMETERS toCalling

*       *********************************************************
*       *                                                         
*       *                      Menu Definition                    
*       *                                                         
*       *********************************************************
*

DEFINE POPUP shortcut SHORTCUT RELATIVE FROM MROW(),MCOL()
DEFINE BAR _med_undo OF shortcut PROMPT "\<Undo" ;
	KEY CTRL+Z, "Ctrl+Z" ;
	PICTRES _med_undo ;
	MESSAGE "Undoes the last command or action"
DEFINE BAR _med_redo OF shortcut PROMPT "Re\<do" ;
	KEY CTRL+R, "Ctrl+R" ;
	PICTRES _med_redo ;
	MESSAGE "Repeats the last command or action"
DEFINE BAR 3 OF shortcut PROMPT "\-"
DEFINE BAR _med_cut OF shortcut PROMPT "Cu\<t" ;
	KEY CTRL+X, "Ctrl+X" ;
	PICTRES _med_cut ;
	MESSAGE "Removes the selection and places it onto the Clipboard"
DEFINE BAR _med_copy OF shortcut PROMPT "\<Copy" ;
	KEY CTRL+C, "Ctrl+C" ;
	PICTRES _med_copy ;
	MESSAGE "Copies the selection onto the Clipboard"
DEFINE BAR _med_paste OF shortcut PROMPT "\<Paste" ;
	KEY CTRL+V, "Ctrl+V" ;
	PICTRES _med_paste ;
	MESSAGE "Pastes the contents of the Clipboard"
DEFINE BAR _med_clear OF shortcut PROMPT "Cle\<ar" ;
	SKIP FOR lower(toCalling.BaseClass) == "checkbox" ;
	PICTRES _med_clear ;
	MESSAGE "Removes the selection and does not place it onto the Clipboard"
DEFINE BAR 8 OF shortcut PROMPT "\-"
DEFINE BAR 9 OF shortcut PROMPT "\<Font" ;
	SKIP FOR lower(toCalling.BaseClass) # "editbox"
DEFINE BAR 10 OF shortcut PROMPT "\-"
DEFINE BAR 11 OF shortcut PROMPT "Toggle Item" ;
	SKIP FOR lower(toCalling.BaseClass) # "checkbox"
DEFINE BAR 12 OF shortcut PROMPT "\-"
DEFINE BAR 13 OF shortcut PROMPT "" + toCalling.Name + ""
DEFINE BAR 14 OF shortcut PROMPT "" + toCalling.BaseClass + ""
ON SELECTION BAR 9 OF shortcut ChangeFont(toCalling)
ON SELECTION BAR 11 OF shortcut ToggleCheckBox(toCalling)

ACTIVATE POPUP shortcut

*       *********************************************************
*       *                                                         
*       *                 Cleanup Code & Procedures               
*       *                                                         
*       *********************************************************
*

*==================================
PROCEDURE ToggleCheckBox(toCalling)
toCalling.Value = NOT (toCalling.Value)

*==================================
PROCEDURE ChangeFont(toCalling)

LOCAL lcFontAttributes, ;
      lcStyle

lcStyle = SPACE(0)

IF toCalling.FontBold = .T.
   lcStyle = lcStyle + "B"
ENDIF

IF toCalling.FontItalic
   lcStyle = lcStyle + "I"
ENDIF

lcFontAttributes = GETFONT(toCalling.FontName, ;
                           toCalling.FontSize, ;
                           lcStyle)

IF NOT EMPTY(lcFontAttributes)
   ALINES(laFontAttribute, lcFontAttributes, .T., ",")

   toCalling.FontName   = laFontAttribute[1]
   toCalling.FontSize   = VAL(laFontAttribute[2])
   toCalling.FontBold   = "B" $ laFontAttribute[3]
   toCalling.FontItalic = "I" $ laFontAttribute[3]
ENDIF

RETURN