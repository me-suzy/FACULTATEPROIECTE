*       *********************************************************
*       *                                                         
*       * 04/23/2002         TOPLEVELMAIN.MPR           02:13:28  
*       *                                                         
*       *********************************************************
*       *                                                         
*       * Author's Name                                           
*       *                                                         
*       * Copyright (C) 2002 Company Name                         
*       * Address                                                 
*       * City,     Zip                                           
*       *                                                         
*       * Description:                                            
*       * This PROGRAM was automatically generated BY GENMENU.    
*       *                                                         
*       *********************************************************

* To attach this menu to your Top-Level form, 
* call it from the Init event of the form:

* Syntax: DO <mprname> WITH <oFormRef> [,<cMenuname>|<lRename>][<lUniquePopups>]

*	oFormRef - form object reference (THIS)
*	cMenuname - name for menu (this is required for Append menus - see below)
*	lRename - renames Name property of your form
*	lUniquePopups - determines whether to generate unique ids for popup names
			
* 	example:

*	PROCEDURE Init
*		DO mymenu.mpr WITH THIS,.T.
*	ENDPROC

* Use the optional 2nd parameter if you plan on running multiple instances
* of your Top-Level form. The preferred method is to create an empty string
* variable and pass it by reference so you can receive the form name after
* the MPR file is run. You can later use this reference to destroy the menu.

*	PROCEDURE Init
*		LOCAL cGetMenuName
*		cGetMenuName = ""
*		DO mymenu.mpr WITH THIS, m.cGetMenuName
*	ENDPROC

* The logical lRename parameter will change the name property of your 
* form to the same name given the menu and may cause conflicts in your 
* code if you directly reference the form by name.

* You will also need to remove the menu when the form is destroyed so that it does 
* not remain in memory unless you wish to reactivate it later in a new form.

* If you passed the optional lRename parameter as .T. as in the above example, 
* you can easily remove the menu in the form's Destroy event as shown below.
* This strategy is ideal when using multiple instances of Top-Level forms.

*	example:

*	PROCEDURE Destroy
*		RELEASE MENU (THIS.Name) EXTENDED
*	ENDPROC

* Using Append/Before/After location options:

*   You might want to append a menu to an existing Top-Level form by setting 
*   the Location option in the General Options dialog. In order to do this, you 
*   must pass the name of the menu in which to attach the new one. The second
*   parameter is required here. If you originally created the menu with the lRename 
*   parameter = .T., then you can update the menu with code similar to the following:

*	example:

*	DO mymenu2.mpr WITH THISFORM,THISFORM.name
*
* Using lUniquePopups:

*   If you are running this menu multiple times in your application, such as in multiple 
*   instances of the same top-level form, you should pass .T. to the lUniquePopups 
*   parameter so that unique popup names are generated to avoid possible conflicts.

*	example:

*	PROCEDURE Init
*		DO mymenu.mpr WITH THIS,.T.,.T.
*	ENDPROC
*
* Note: Parm4-Parm9 are not reserved and freely available for use with your menu code.
*

LPARAMETERS oFormRef, getMenuName, lUniquePopups, parm4, parm5, parm6, parm7, parm8, parm9
LOCAL cMenuName, nTotPops, a_menupops, cTypeParm2, cSaveFormName
IF TYPE("m.oFormRef") # "O" OR ;
  LOWER(m.oFormRef.BaseClass) # 'form' OR ;
  m.oFormRef.ShowWindow # 2
	MESSAGEBOX([This menu can only be called from a Top-Level form. Ensure that your form's ShowWindow property is set to 2. Read the header section of the menu's MPR file for more details.])
	RETURN
ENDIF
m.cTypeParm2 = TYPE("m.getMenuName")
m.cMenuName = SYS(2015)
m.cSaveFormName = m.oFormRef.Name
IF m.cTypeParm2 = "C" OR (m.cTypeParm2 = "L" AND m.getMenuName)
	m.oFormRef.Name = m.cMenuName
ENDIF
IF m.cTypeParm2 = "C" AND !EMPTY(m.getMenuName)
	m.cMenuName = m.getMenuName
ENDIF
DIMENSION a_menupops[6]
IF TYPE("m.lUniquePopups")="L" AND m.lUniquePopups
	FOR nTotPops = 1 TO ALEN(a_menupops)
		a_menupops[m.nTotPops]= SYS(2015)
	ENDFOR
ELSE
	a_menupops[1]="_mfile"
	a_menupops[2]="_medit"
	a_menupops[3]="_med_bkmks"
	a_menupops[4]="_mview"
	a_menupops[5]="_mwindow"
	a_menupops[6]="_msystem"
ENDIF


*       *********************************************************
*       *                                                         
*       *                      Menu Definition                    
*       *                                                         
*       *********************************************************
*

DEFINE MENU (m.cMenuName) IN (m.oFormRef.Name) BAR

DEFINE PAD _msm_file OF (m.cMenuName) PROMPT "\<File" COLOR SCHEME 3 ;
	NEGOTIATE  LEFT, NONE ;
	KEY ALT+F, "" ;
	MESSAGE "Creates, opens, saves, prints files or quits Visual FoxPro"
DEFINE PAD _msm_edit OF (m.cMenuName) PROMPT "\<Edit" COLOR SCHEME 3 ;
	NEGOTIATE  NONE, LEFT ;
	KEY ALT+E, "" ;
	MESSAGE "Edits text or current selection"
DEFINE PAD _msm_view OF (m.cMenuName) PROMPT "\<View" COLOR SCHEME 3 ;
	NEGOTIATE  NONE, LEFT ;
	KEY ALT+V, "" ;
	MESSAGE "Changes display options"
DEFINE PAD _msm_windo OF (m.cMenuName) PROMPT "\<Window" COLOR SCHEME 3 ;
	NEGOTIATE  RIGHT, LEFT ;
	KEY ALT+W, "" ;
	MESSAGE "Manipulates windows, displays Command and Data Session windows"
DEFINE PAD _msm_systm OF (m.cMenuName) PROMPT "\<Help" COLOR SCHEME 3 ;
	NEGOTIATE  NONE, RIGHT ;
	KEY ALT+H, "" ;
	MESSAGE "Displays Help on Visual FoxPro"
ON PAD _msm_file OF (m.cMenuName) ACTIVATE POPUP (a_menupops[1])
ON PAD _msm_edit OF (m.cMenuName) ACTIVATE POPUP (a_menupops[2])
ON PAD _msm_view OF (m.cMenuName) ACTIVATE POPUP (a_menupops[4])
ON PAD _msm_windo OF (m.cMenuName) ACTIVATE POPUP (a_menupops[5])
ON PAD _msm_systm OF (m.cMenuName) ACTIVATE POPUP (a_menupops[6])

DEFINE POPUP (a_menupops[1]) MARGIN RELATIVE SHADOW COLOR SCHEME 4
DEFINE BAR _mfi_new OF (a_menupops[1]) PROMPT "\<New..." ;
	KEY CTRL+N, "Ctrl+N" ;
	PICTRES _mfi_new ;
	MESSAGE "Creates a new file"
DEFINE BAR _mfi_open OF (a_menupops[1]) PROMPT "\<Open..." ;
	KEY CTRL+O, "Ctrl+O" ;
	PICTRES _mfi_open ;
	MESSAGE "Opens an existing file"
DEFINE BAR _mfi_close OF (a_menupops[1]) PROMPT "\<Close" ;
	PICTRES _mfi_close ;
	MESSAGE "Closes the current file"
DEFINE BAR _mfi_clall OF (a_menupops[1]) PROMPT "Close All" ;
	PICTRES _mfi_clall ;
	MESSAGE "Closes all windows"
DEFINE BAR _mfi_sp100 OF (a_menupops[1]) PROMPT "\-" ;
	PICTRES _mfi_sp100
DEFINE BAR _mfi_save OF (a_menupops[1]) PROMPT "\<Save" ;
	KEY CTRL+S, "Ctrl+S" ;
	PICTRES _mfi_save ;
	MESSAGE "Saves changes to the current file"
DEFINE BAR _mfi_savas OF (a_menupops[1]) PROMPT "Save \<As..." ;
	PICTRES _mfi_savas ;
	MESSAGE "Saves changes to the current file with a new name"
DEFINE BAR _mfi_saveashtml OF (a_menupops[1]) PROMPT "Save As \<HTML..." ;
	PICTRES _mfi_saveashtml ;
	MESSAGE "Saves the current file as HTML"
DEFINE BAR _mfi_revrt OF (a_menupops[1]) PROMPT "\<Revert" ;
	PICTRES _mfi_revrt ;
	MESSAGE "Reverts the current file to the last saved version"
DEFINE BAR _mfi_sp200 OF (a_menupops[1]) PROMPT "\-" ;
	PICTRES _mfi_sp200
DEFINE BAR _mfi_import OF (a_menupops[1]) PROMPT "\<Import..." ;
	PICTRES _mfi_import ;
	MESSAGE "Imports a Visual FoxPro file or a file from another application"
DEFINE BAR _mfi_export OF (a_menupops[1]) PROMPT "\<Export..." ;
	PICTRES _mfi_export ;
	MESSAGE "Exports a Visual FoxPro file to another application's file"
DEFINE BAR _mfi_sp300 OF (a_menupops[1]) PROMPT "\-" ;
	PICTRES _mfi_sp300
DEFINE BAR _mfi_pgset OF (a_menupops[1]) PROMPT "Page Set\<up..." ;
	PICTRES _mfi_pgset ;
	MESSAGE "Changes the page layout and printer settings"
DEFINE BAR _mfi_prevu OF (a_menupops[1]) PROMPT "Print Pre\<view" ;
	PICTRES _mfi_prevu ;
	MESSAGE "Displays full pages as they will be printed"
DEFINE BAR _mfi_sysprint OF (a_menupops[1]) PROMPT "\<Print..." ;
	KEY CTRL+P, "Ctrl+P" ;
	PICTRES _mfi_sysprint ;
	MESSAGE "Prints a text file, report, label, contents of the Command window, or contents of the Clipboard"
DEFINE BAR _mfi_send OF (a_menupops[1]) PROMPT "Sen\<d..." ;
	PICTRES _mfi_send ;
	MESSAGE "Displays Mail window for sending e-mail"
DEFINE BAR _mfi_sp400 OF (a_menupops[1]) PROMPT "\-" ;
	PICTRES _mfi_sp400
DEFINE BAR _mfi_quit OF (a_menupops[1]) PROMPT "E\<xit" ;
	PICTRES _mfi_quit ;
	MESSAGE "Quits Visual FoxPro"

DEFINE POPUP (a_menupops[2]) MARGIN RELATIVE SHADOW COLOR SCHEME 4
DEFINE BAR _med_undo OF (a_menupops[2]) PROMPT "\<Undo" ;
	KEY CTRL+Z, "Ctrl+Z" ;
	PICTRES _med_undo ;
	MESSAGE "Undoes the last command or action"
DEFINE BAR _med_redo OF (a_menupops[2]) PROMPT "Re\<do" ;
	KEY CTRL+R, "Ctrl+R" ;
	PICTRES _med_redo ;
	MESSAGE "Repeats the last command or action"
DEFINE BAR _med_sp100 OF (a_menupops[2]) PROMPT "\-" ;
	PICTRES _med_sp100
DEFINE BAR _med_cut OF (a_menupops[2]) PROMPT "Cu\<t" ;
	KEY CTRL+X, "Ctrl+X" ;
	PICTRES _med_cut ;
	MESSAGE "Removes the selection and places it onto the Clipboard"
DEFINE BAR _med_copy OF (a_menupops[2]) PROMPT "\<Copy" ;
	KEY CTRL+C, "Ctrl+C" ;
	PICTRES _med_copy ;
	MESSAGE "Copies the selection onto the Clipboard"
DEFINE BAR _med_paste OF (a_menupops[2]) PROMPT "\<Paste" ;
	KEY CTRL+V, "Ctrl+V" ;
	PICTRES _med_paste ;
	MESSAGE "Pastes the contents of the Clipboard"
DEFINE BAR _med_pstlk OF (a_menupops[2]) PROMPT "Paste \<Special..." ;
	PICTRES _med_pstlk ;
	MESSAGE "Pastes the Clipboard contents as a linked object, embedded object, or other object type"
DEFINE BAR _med_clear OF (a_menupops[2]) PROMPT "Cle\<ar" ;
	PICTRES _med_clear ;
	MESSAGE "Removes the selection and does not place it onto the Clipboard"
DEFINE BAR _med_sp200 OF (a_menupops[2]) PROMPT "\-" ;
	PICTRES _med_sp200
DEFINE BAR _med_slcta OF (a_menupops[2]) PROMPT "Se\<lect All" ;
	KEY CTRL+A, "Ctrl+A" ;
	PICTRES _med_slcta ;
	MESSAGE "Selects all text or items in the current window"
DEFINE BAR _med_sp300 OF (a_menupops[2]) PROMPT "\-" ;
	PICTRES _med_sp300
DEFINE BAR _med_find OF (a_menupops[2]) PROMPT "\<Find..." ;
	KEY CTRL+F, "Ctrl+F" ;
	PICTRES _med_find ;
	MESSAGE "Searches for specified text"
DEFINE BAR _med_repl OF (a_menupops[2]) PROMPT "R\<eplace..." ;
	KEY CTRL+L, "Ctrl+L" ;
	PICTRES _med_repl ;
	MESSAGE "Replaces specified text with different text"
DEFINE BAR _med_sp400 OF (a_menupops[2]) PROMPT "\-" ;
	PICTRES _med_sp400
DEFINE BAR _med_listmembers OF (a_menupops[2]) PROMPT "List \<Members" ;
	KEY CTRL+ENTER, "Ctrl+J" ;
	PICTRES _med_listmembers ;
	MESSAGE "List members of the selected object"
DEFINE BAR _med_quickinfo OF (a_menupops[2]) PROMPT "\<Quick Info" ;
	KEY CTRL+I, "Ctrl+I" ;
	PICTRES _med_quickinfo ;
	MESSAGE "Quick information on the selected object"
DEFINE BAR _med_sp500 OF (a_menupops[2]) PROMPT "\-" ;
	PICTRES _med_sp500
DEFINE BAR 18 OF (a_menupops[2]) PROMPT "\<Bookmarks" ;
	PICTRES _mbk_togtask ;
	MESSAGE "Bookmark options"
DEFINE BAR 19 OF (a_menupops[2]) PROMPT "\-"
DEFINE BAR _med_insob OF (a_menupops[2]) PROMPT "\<Insert Object..." ;
	PICTRES _med_insob ;
	MESSAGE "Embeds an object in a General field type"
DEFINE BAR _med_obj OF (a_menupops[2]) PROMPT "\<Object..." ;
	PICTRES _med_obj ;
	MESSAGE "Edits the selected object"
DEFINE BAR _med_link OF (a_menupops[2]) PROMPT "Lin\<ks..." ;
	PICTRES _med_link ;
	MESSAGE "Opens linked files or changes links"
DEFINE BAR 23 OF (a_menupops[2]) PROMPT "\-"
DEFINE BAR _med_pref OF (a_menupops[2]) PROMPT "Prope\<rties..." ;
	PICTRES _med_pref ;
	MESSAGE "Set editor properties"
ON BAR 18 OF (a_menupops[2]) ACTIVATE POPUP (a_menupops[3])

DEFINE POPUP (a_menupops[3]) MARGIN RELATIVE SHADOW COLOR SCHEME 4
DEFINE BAR _mbk_togtask OF (a_menupops[3]) PROMPT "Toggle Task List \<Shortcut" ;
	KEY ALT+F2, "Alt+F2" ;
	PICTRES _mbk_togtask ;
	MESSAGE "Adds a Shortcut for current line"
DEFINE BAR _mbk_togbkmk OF (a_menupops[3]) PROMPT "Toggle \<Bookmark" ;
	KEY SHIFT+ALT+F2, "Alt+Shift+F2" ;
	PICTRES _mbk_togbkmk ;
	MESSAGE "Toggles bookmark for current line"
DEFINE BAR _mbk_bkmknext OF (a_menupops[3]) PROMPT "\<Next Shortcut/Bookmark" ;
	KEY F2, "F2" ;
	PICTRES _mbk_bkmknext ;
	MESSAGE "Go to the next bookmark or shortcut in the file"
DEFINE BAR _mbk_bkmkprev OF (a_menupops[3]) PROMPT "\<Previous Shortcut/Bookmark" ;
	KEY SHIFT+F2, "Shift+F2" ;
	PICTRES _mbk_bkmkprev ;
	MESSAGE "Go to the previous bookmark or shortcut in the file"

DEFINE POPUP (a_menupops[4]) MARGIN RELATIVE SHADOW COLOR SCHEME 4
DEFINE BAR _mvi_toolb OF (a_menupops[4]) PROMPT "\<Toolbars..." ;
	PICTRES _mvi_toolb ;
	MESSAGE "Shows, hides, or customizes toolbars"

DEFINE POPUP (a_menupops[5]) MARGIN RELATIVE SHADOW COLOR SCHEME 4
DEFINE BAR _mwi_cascade OF (a_menupops[5]) PROMPT "Ca\<scade" ;
	PICTRES _mwi_cascade ;
	MESSAGE "Arranges windows as cascading tiles"
DEFINE BAR _mwi_arran OF (a_menupops[5]) PROMPT "\<Arrange All" ;
	PICTRES _mwi_arran ;
	MESSAGE "Arranges windows as non-overlapping tiles"
DEFINE BAR _mwi_sp100 OF (a_menupops[5]) PROMPT "\-" ;
	PICTRES _mwi_sp100
DEFINE BAR _mwi_dockable OF (a_menupops[5]) PROMPT "Doc\<kable" ;
	PICTRES _mwi_dockable ;
	MESSAGE "Enable docking of this window"
DEFINE BAR _mwi_hide OF (a_menupops[5]) PROMPT "\<Hide" ;
	PICTRES _mwi_hide ;
	MESSAGE "Hides the active window"
DEFINE BAR _mwi_hidea OF (a_menupops[5]) PROMPT "Hide All" ;
	PICTRES _mwi_hidea ;
	MESSAGE "Hides all windows"
DEFINE BAR _mwi_showa OF (a_menupops[5]) PROMPT "Sh\<ow All" ;
	PICTRES _mwi_showa ;
	MESSAGE "Shows all hidden windows"
DEFINE BAR _mwi_sp200 OF (a_menupops[5]) PROMPT "\-" ;
	PICTRES _mwi_sp200
DEFINE BAR _mwi_clear OF (a_menupops[5]) PROMPT "Clea\<r" ;
	PICTRES _mwi_clear ;
	MESSAGE "Clears text from the application workspace or the current output window"
DEFINE BAR _mwi_rotat OF (a_menupops[5]) PROMPT "C\<ycle" ;
	KEY CTRL+F1, "Ctrl+F1" ;
	PICTRES _mwi_rotat ;
	MESSAGE "Cycles through all open windows"
DEFINE BAR _mwi_sp200 OF (a_menupops[5]) PROMPT "\-" ;
	PICTRES _mwi_sp200
DEFINE BAR _mwi_cmd OF (a_menupops[5]) PROMPT "\<Command Window" ;
	KEY CTRL+F2, "Ctrl+F2" ;
	PICTRES _mwi_cmd ;
	MESSAGE "Displays the Command window"
DEFINE BAR _mwi_view OF (a_menupops[5]) PROMPT "\<Data Session" ;
	PICTRES _mwi_view ;
	MESSAGE "Displays the Data Session window"
DEFINE BAR _mwi_properties OF (a_menupops[5]) PROMPT "\<Properties Window" ;
	PICTRES _mwi_properties ;
	MESSAGE "Display the Properties window"

DEFINE POPUP (a_menupops[6]) MARGIN RELATIVE SHADOW COLOR SCHEME 4
DEFINE BAR _mst_hpsch OF (a_menupops[6]) PROMPT "Microsoft \<Visual FoxPro Help" ;
	KEY F1, "F1" ;
	PICTRES _mst_hpsch ;
	MESSAGE "Locates Help topics based on keywords you enter"
DEFINE BAR _mst_msdns OF (a_menupops[6]) PROMPT "MSDN \<Search" ;
	PICTRES _mst_msdns ;
	MESSAGE "Provides access to MSDN Search tab."
DEFINE BAR _mst_sp100 OF (a_menupops[6]) PROMPT "\-" ;
	PICTRES _mst_sp100
DEFINE BAR _mst_techs OF (a_menupops[6]) PROMPT "\<Technical Support" ;
	PICTRES _mst_techs ;
	MESSAGE "Provides information on how to obtain additional technical help"
DEFINE BAR _mst_vfpweb OF (a_menupops[6]) PROMPT "Visual FoxPro on the \<Web" ;
	PICTRES _mst_vfpweb ;
	MESSAGE "Launches your web browser to go to Visual FoxPro's Web sites"
DEFINE BAR _mst_sp300 OF (a_menupops[6]) PROMPT "\-" ;
	PICTRES _mst_sp300
DEFINE BAR _mst_about OF (a_menupops[6]) PROMPT "\<About Microsoft Visual FoxPro..." ;
	PICTRES _mst_about ;
	MESSAGE "Displays version and copyright information about Visual FoxPro"

ACTIVATE MENU (m.cMenuName) NOWAIT

IF m.cTypeParm2 = "C"
	m.getMenuName = m.cMenuName
	m.oFormRef.Name = m.cSaveFormName 
ENDIF
